#include<stdio.h>
#include<stdlib.h>
#include<stdbool.h>
#define MAX 4
struct stack{
    int a[MAX];
    int top;
};
bool isFull(struct stack *s){
    if(s->top == MAX-1)
        return true;
    else
        return false;
}
bool isEmpty(struct stack *s){
    if(s->top == -1)
        return true;
    else 
        return false;
}
void push(struct stack *s, int item){
    if(isFull(s)){
         printf("Stack is full");
         return;
    }
    else{
        s->top++;
        s->a[s->top] = item;
    }
    
       
}
void pop(struct stack *s){
    if(isEmpty(s)){
        printf("Stck is empty");
        return;
    }
    int itemdel = s->a[s->top];
    s->top = s->top-1;
    printf("%d element deletd",itemdel);
}
void display(struct stack *s){
    if(isEmpty(s)){
        printf("nothing to display,stack empty");
        return;
    }
    else{
        
     for(int i=0;i<=s->top;i++)
     printf("%d\t",s->a[i] );
    }
    
}
void multipop(struct stack *s,int k){
    while(k>0 && !isEmpty(s)){
        pop(s);
        k--;
    }
}

void main(){
    int ch,item,k;
    struct stack s;
    s.top = -1;
    while(1){
         printf(" 1. push 2. pop 3. display 4.multipop \n");
        scanf("%d",&ch);
    switch(ch){
        case 1: printf("Enter the element to be pushed\n");
                scanf("%d",&item);
                push(&s,item);
                break;
        case 2: pop(&s);
                break;
        case 3:
                display(&s);
                break;
        case 4 : printf("Enter no. pop operation\n");
                 scanf("%d",&k);
                 multipop(&s,k);
                 break;
            
     }
    }
   
}
