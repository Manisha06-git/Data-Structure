#include<stdio.h>
#include<stdlib.h>
#include<stdbool.h>
#define MAX 4
struct queue{
    int a[MAX];
    int rear;
    int front;
};
typedef struct queue queue;
bool isfull(queue *q){
    if(q->rear == MAX-1){
        return true;
    }
    else
        return false;
}
bool isempty(queue *q){
    if(q->front == -1 || q->front>q->rear){
        return true;
    }
    else 
        return false;
}
void enqueue(queue *q,int ele){
    if(isfull(q)){
        printf("queue is full");
    
    }
    else{
        if(q->front == -1){
            q->front++;
        }
        q->rear++;
        q->a[q->rear] = ele;
       
    }
    
}
void dequeue(queue *q){
    if(isempty(q)){
        printf("Empty stack\n");
    }
    else{
        
        int elem = q->a[q->front];
        
        q->front++;
        printf("%d popped",elem);
    }
}
void display(queue *q){
    if(isempty(q)){
        printf("nothing to display");
        
    }
    else{
        for(int i = q->front;i<=q->rear;i++){
            printf("%d\t",q->a[i]);
        }
    }
}
void main(){
    int ch,ele;
    queue q;
    q.rear = -1;
    q.front = -1;
    while(1){
        printf("1.insert 2.delete 3. display");
        scanf("%d",&ch);
        switch(ch){
            case 1: 
                    printf("enter element\n");
                    scanf("%d",&ele);
                    enqueue(&q,ele);
                    break;
            case 2: dequeue(&q);
                    break;
            case 3: display(&q);
                 break;
            default : exit(0);
        }
    }
}
